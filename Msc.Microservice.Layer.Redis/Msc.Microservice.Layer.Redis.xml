<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Msc.Microservice.Layer.Redis</name>
    </assembly>
    <members>
        <member name="T:Msc.Microservice.Layer.Redis.Configuration.Redis">
            <summary>
            Конфигурация для Redis
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.InstanceName">
            <summary>
            Имя экземпляра слушателя
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.Endpoints">
            <summary>
            Подключение
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.KeepAlive">
            <summary>
            время в сек, через которое требуется производить ping подключения
            Для того чтобы удостовериться что подключение открыто
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.SyncTimeoutMs">
            <summary>
            Тайминг синхронизации
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.ConnectRetry">
            <summary>
            Количество попыток переподключения
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.Redis.Password">
            <summary>
            Пароль
            </summary>
        </member>
        <member name="T:Msc.Microservice.Layer.Redis.Configuration.RedisEndpoint">
            <summary>
            Конечная точка для подключения Redis
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.RedisEndpoint.Host">
            <summary>
            Хост подключения
            </summary>
        </member>
        <member name="P:Msc.Microservice.Layer.Redis.Configuration.RedisEndpoint.Port">
            <summary>
            Порт подключения
            </summary>
        </member>
        <member name="T:Msc.Microservice.Layer.Redis.ExtendRedisCache">
            <summary>
            Класс расширение для кеша Redis
            </summary>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions})">
            <summary>
            Конструктор с параметрами
            </summary>
            <param name="optionsAccessor">Опции подключения</param>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.ResetIncr(System.String,System.Int64)">
            <summary>
            Установить начальное значение инкремента
            </summary>
            <param name="key">Название ключа</param>
            <param name="val">Начальное значение ключа</param>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.SetHValuesAsync(System.String,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Hash set
            </summary>
            <param name="hashKey">Hash key</param>
            <param name="values">Values</param>
            <returns> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.SetHValueAsync(System.String,System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Hash set
            </summary>
            <param name="hashKey">Hash key</param>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="hashSetKeyLifetime">Время жизни для всего хэш сета</param>
            <returns> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.GetAllHValuesAsync(System.String)">
            <summary>
            Получить все значения из хэша
            </summary>
            <param name="hashKey">Ключ хэша=бакета</param>
            <returns>пары ключ-значение</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.GetHValueAsync(System.String,System.String)">
            <summary>
            Получить значение для ключа из хэша
            </summary>
            <param name="hashKey">Ключ хэша</param>
            <param name="hashValueName">Имя значения внутри хэша</param>
            <returns>Получить </returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.DelHAsync(System.String)">
            <summary>
            Удалить хэш
            </summary>
            <param name="hashKey">Хэш-ключ</param>
            <returns>representing the asynchronous operation.</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.GetIncr(System.String)">
            <summary>
            Получить текущее значение инкремента
            </summary>
            <param name="key">Название ключа</param>
            <returns>Значение</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.ExtendRedisCache.SetIncr(System.String,System.Int64)">
            <summary>
            Увеличить инкремент на заданное значение
            </summary>
            <param name="key">Название ключа</param>
            <param name="val">Начальное значение ключа</param>
            <returns>Результат изменения</returns>
        </member>
        <member name="T:Msc.Microservice.Layer.Redis.IExtendDistributedCache">
            <summary>
            Интерфейс расширение для кеша Redis
            </summary>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.ResetIncr(System.String,System.Int64)">
            <summary>
            Установить начальное значение инкремента
            </summary>
            <param name="key">Название ключа</param>
            <param name="val">Начальное значение ключа</param>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.GetIncr(System.String)">
            <summary>
            Получить текущее значение инкремента
            </summary>
            <param name="key">Название ключа</param>
            <returns>Значение</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.SetIncr(System.String,System.Int64)">
            <summary>
            Увеличить инкремент на заданное значение
            </summary>
            <param name="key">Название ключа</param>
            <param name="val">Начальное значение ключа</param>
            <returns>Результат изменения</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.SetHValuesAsync(System.String,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Hash set
            </summary>
            <param name="hashKey">Hash key</param>
            <param name="values">Values</param>
            <returns> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.GetAllHValuesAsync(System.String)">
            <summary>
            Получить все значения из хэша
            </summary>
            <param name="hashKey">Ключ хэша=бакета</param>
            <returns>пары ключ-значение</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.SetHValueAsync(System.String,System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Установить значение хэш-сета
            </summary>
            <param name="hashKey">Ключ хэш сета</param>
            <param name="key">Ключ данных</param>
            <param name="value">Ключ значения</param>
            <param name="hashSetKeyLifetime">Время жизни ключа хэш-сета</param>
            <returns>Асинхронная операция</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.GetHValueAsync(System.String,System.String)">
            <summary>
            Получить значение для ключа из хэша
            </summary>
            <param name="hashKey">Ключ хэша</param>
            <param name="hashValueName">Имя значения внутри хэша</param>
            <returns>Получить </returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.IExtendDistributedCache.DelHAsync(System.String)">
            <summary>
            Удалить хэш
            </summary>
            <param name="hashKey">Хэш-ключ</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Msc.Microservice.Layer.Redis.RedisAccessLayer">
            <summary>
            Слой доступа к Redis
            </summary>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.RedisAccessLayer.RegisterConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Выполнить регистрацию и валидацию конфигураций.
            </summary>
            <param name="configurationRoot">Валидация конфигураций.</param>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.RedisAccessLayer.RegisterLayer(Microsoft.Extensions.Configuration.IConfigurationRoot,Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Выполнить регистрацию и валидацию конфигураций.
            </summary>
            <param name="config">Валидация конфигураций.</param>
            <param name="services">Коллекция служб.</param>
            <returns>Список ошибок во время конфигурирования.</returns>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.RedisAccessLayer.RunAsync(System.IServiceProvider)">
            <summary>
            Запустить выполннение операций в слое асинхронно.
            </summary>
            <param name="serviceProvider">Провайдер служб.</param>
        </member>
        <member name="M:Msc.Microservice.Layer.Redis.RedisAccessLayer.Shutdown(System.IServiceProvider)">
            <summary>
            Отключить работу службы.
            </summary>
            <param name="serviceProvider">Провайдер служб.</param>
        </member>
    </members>
</doc>
